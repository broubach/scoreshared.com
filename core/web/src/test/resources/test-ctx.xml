<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xsi:schemaLocation="
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-3.1.xsd
        http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
        http://www.springframework.org/schema/jdbc
        http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd">

	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="classpath:test.properties" />
	</bean>

	<bean id="messageSource"
		class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basename" value="ApplicationResources"/>
	</bean>

	<bean id="localeResolver"
		class="org.springframework.web.servlet.i18n.CookieLocaleResolver" />

    <jdbc:embedded-database id="dataSource"/>

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan" value="com.scoreshared.business.persistence"/>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.HSQLDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">validate</prop>

				<prop key="hibernate.connection.pool_size">100</prop>
				<prop key="hibernate.c3p0.acquire_increment">5</prop>
				<prop key="hibernate.c3p0.idle_test_period">100</prop>
				<prop key="hibernate.c3p0.min_size">10</prop>
				<prop key="hibernate.c3p0.max_size">100</prop>
				<prop key="hibernate.c3p0.timeout">100</prop>
				<prop key="hibernate.c3p0.max_statements">0</prop>
				<prop key="hibernate.cache.provider_class">org.hibernate.cache.NoCacheProvider</prop>
				<prop key="hibernate.search.default.directory_provider">filesystem</prop>
				<prop key="hibernate.search.default.indexBase">${lucene.index.folder}</prop>
				<prop key="hibernate.hbm2ddl.import_files">/data.sql</prop>
				<prop key="hibernate.hbm2ddl.auto">create-drop</prop>
			</props>
		</property>
	</bean>

	<bean class="com.scoreshared.business.persistence.GenericOperationsDao">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>

	<context:component-scan base-package="com.scoreshared" />

	<bean id="conversionService"
	      class="org.springframework.context.support.ConversionServiceFactoryBean">
	    <property name="converters">
	        <list>
	            <bean class="com.scoreshared.webapp.dto.ScoreConverter"/>
	            <bean class="com.scoreshared.webapp.dto.CommentConverter"/>
	            <bean class="com.scoreshared.webapp.dto.ScoreModelConverter"/>
	            <bean class="com.scoreshared.webapp.dto.UserConverter"/>
	        </list>
	    </property>
	</bean>

	<!-- Mocked beans -->
	<bean id="jmsTemplate" class="org.mockito.Mockito" factory-method="mock">
		<constructor-arg value="com.scoreshared.scaffold.CustomJmsTemplate" />
	</bean>

	<bean class="org.mockito.Mockito" factory-method="mock">
		<constructor-arg value="freemarker.template.Configuration" />
	</bean>

	<bean id="passwordEncoder" class="org.mockito.Mockito" factory-method="mock">
		<constructor-arg value="org.springframework.security.authentication.encoding.Md5PasswordEncoder" />
	</bean>

	<bean id="usersConnectionRepository" class="org.mockito.Mockito" factory-method="mock">
		<constructor-arg value="org.springframework.social.connect.jdbc.JdbcUsersConnectionRepository" />
	</bean>

	<bean id="connectionRepository" class="org.mockito.Mockito" factory-method="mock">
		<constructor-arg value="org.springframework.social.connect.ConnectionRepository" />
	</bean>

	<bean class="org.mockito.Mockito" factory-method="mock">
		<constructor-arg value="org.springframework.security.authentication.AuthenticationManager" />
	</bean>

	<bean class="org.mockito.Mockito" factory-method="mock">
		<constructor-arg value="org.springframework.security.web.context.HttpSessionSecurityContextRepository" />
	</bean>

	<bean class="org.mockito.Mockito" factory-method="mock">
		<constructor-arg value="javax.servlet.http.HttpServletRequest" />
	</bean>
</beans>